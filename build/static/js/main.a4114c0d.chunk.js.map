{"version":3,"sources":["components/utilities/styled-inputs.js","components/home/banner.js","components/home/character.card.js","components/home/loading.js","components/home/pages-buttons.js","components/utilities/modal-body.js","components/utilities/picker.js","components/home/home.page.js","components/location/info-banner.js","components/utilities/pagination.js","components/utilities/characters-gallery.js","components/location/location.page.js","components/episodes/episodes.page.js","App.js","reportWebVitals.js","index.js"],"names":["StyledInput","reff","label","icon","onChange","name","value","placeholder","colorIcon","type","style","className","width","height","color","ref","StyledSelect","children","Banner","variant","lineHeight","CharacterCard","data","setPickedEpisodes","locationID","location","url","split","backgroundColor","src","image","alt","status","species","to","onClick","episode","map","length","Loading","PagesButtons","action","info","disabled","prev","next","ModalBody","props","windowWrapper","React","createRef","settings","closeAction","lockWindow","lockStatus","lockAction","cancelButtonTitle","extraButtonTitle","extraButtonColor","extraButtonAction","confirmButtonTitle","confirmButtonAction","hideButtons","title","closeWindow","current","setTimeout","Picker","episodes","close","useState","picked","setPicked","history","useHistory","push","e","target","number","Home","setInfo","keyword","setKeyword","charcacters","setCharacters","loading","setLoading","pickedEpisodes","api","useEffect","handleQuery","params","a","fetch","query","json","results","console","log","marginRight","count","element","idx","InfoBanner","dimension","residents","defaultPag","page","pages","display","range","Pagination","setRange","pagination","setPagination","min","max","pageInput","paginate","Math","ceil","_range","x","handlePages","nextPage","selectedIndex","previousPage","tabIndex","onKeyDown","keyCode","CharactersGallery","setResults","getResidentsInfo","charactersID","undefined","currentID","result","route","Location","match","setData","id","EpisodePage","characters","air_date","App","exact","path","component","Episode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4114c0d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport const StyledInput = ({ reff, label, icon, onChange, name, value, placeholder = \"\", colorIcon = \"orange\", type = \"text\", style }) => {\r\n  return (\r\n    <div style={style} className=\"d-flex align-items-end my-2\">\r\n      {icon && (\r\n        <div style={{ width: \"40px\", height: \"40px\" }} className=\"center-all align-items-start\">\r\n          <i style={{ color: colorIcon }} className={\"fas display-6 fa-\" + icon} />\r\n        </div>\r\n      )}\r\n      <div className=\"flex-1\">\r\n        <label>{label}</label>\r\n        <input className=\"text-success text-lowercase bg-light\" ref={reff} name={name} value={value} type={type} value={value} onChange={onChange} placeholder={placeholder} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const StyledSelect = ({ reff, label, icon, onChange, name, value, colorIcon = \"orange\", children, style }) => {\r\n  return (\r\n    <div style={style} className=\"d-flex align-items-end my-2\">\r\n      {icon && (\r\n        <div style={{ width: \"40px\", height: \"40px\" }} className=\"center-all align-items-start\">\r\n          <i style={{ color: colorIcon }} className={\"fas display-6 fa-\" + icon} />\r\n        </div>\r\n      )}\r\n      <div className=\"flex-1\">\r\n        <label>{label}</label>\r\n        <select ref={reff} name={name} value={value} className=\"text-capitalize bg-light\" onChange={onChange}>\r\n          {children}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst Banner = ({ variant = \"light\" }) => {\r\n  return (\r\n    <div style={{ width: \"250px\" }} className={`p-4 h-100  bg-${variant} center-all mr-2`}>\r\n      <h4 style={{ lineHeight: \"50px\" }} className=\"strong-text display-3\">\r\n        Rick and Morty\r\n      </h4>\r\n      <p className=\"display-6 strong-text w-100 mt-3\">Api Rest Demo</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = ({ data, setPickedEpisodes }) => {\r\n  const locationID = data.location.url.split(\"location/\")[1];\r\n\r\n  const handleEpisodes = () => {\r\n    setPickedEpisodes(data.episode.map((episode) => episode.split(\"episode/\")[1]));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"300px\" }} className=\"bg-grey d-flex flex-column mr-2 mb-2 p-2\">\r\n      <div className=\"center-all\">\r\n        <img\r\n          style={{ width: \"200px\", height: \"200px\", backgroundColor: \"grey\" }}\r\n          className=\"bg-white rounded-circle mb-3 hand-pointer\"\r\n          src={data.image}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"p-2\">\r\n        <h4 className=\"strong-text display-6\">{data.name}</h4>\r\n        <h5 className=\"display-7\">\r\n          <span className=\"font-weight-bold mr-2\">Status: </span> {data.status}\r\n        </h5>\r\n        <h5 className=\"display-7\">\r\n          <span className=\"font-weight-bold mr-2\">Especie:</span> {data.species}\r\n        </h5>\r\n        <Link to={`/location/${locationID}`} className=\"display-7 d-block text-info\">\r\n          <span className=\"font-weight-bold mr-2\">Location:</span> {data.location.name}\r\n        </Link>\r\n        <h5 className=\"display-7 hand-pointer\" onClick={handleEpisodes}>\r\n          <span className=\"font-weight-bold mr-2\">Episodios: </span> {data.episode.length}\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"center-all flex-1 h-100\">\r\n      <div className=\"spin\">\r\n        <i className=\"display-3 fas fa-spinner text-primary\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nconst PagesButtons = ({ action, info }) => {\r\n  return (\r\n    <div className=\"flex-1 text-right\">\r\n      <button\r\n        disabled={info.prev === null}\r\n        className=\"btn btn-warning mr-3\"\r\n        onClick={() => action(info.prev)}\r\n      >\r\n        <i className=\"fas fa-chevron-left\" />\r\n      </button>\r\n      <button\r\n        disabled={info.next === null}\r\n        className=\"btn btn-warning\"\r\n        onClick={() => action(info.next)}\r\n      >\r\n        <i className=\"fas fa-chevron-right\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PagesButtons;\r\n","import React from \"react\";\r\n\r\nconst ModalBody = (props) => {\r\n  const windowWrapper = React.createRef();\r\n\r\n  const {\r\n    closeAction,\r\n    lockWindow,\r\n    lockStatus,\r\n    lockAction,\r\n    cancelButtonTitle,\r\n    extraButtonTitle,\r\n    extraButtonColor,\r\n    extraButtonAction,\r\n    confirmButtonTitle,\r\n    confirmButtonAction,\r\n    hideButtons,\r\n    title,\r\n  } = props.settings;\r\n\r\n  const closeWindow = () => {\r\n    windowWrapper.current.className += \" show-down\";\r\n    setTimeout(() => {\r\n      closeAction();\r\n    }, 250);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-outside\">\r\n      <div ref={windowWrapper} className=\"modal-window lines-bg\">\r\n        <div className=\"d-flex justify-content-between w-100 bg-dark p-3\">\r\n          <h5 className=\"flex-1 strong-text m-0\">{title}</h5>\r\n          {lockWindow && (\r\n            <i\r\n              className={`lock-button fas fa-${lockStatus ? \"lock\" : \"lock-open\"} mr-2`}\r\n              onClick={lockAction}\r\n            />\r\n          )}\r\n\r\n          <i className=\"close-button fas fa-times\" onClick={closeWindow} />\r\n        </div>\r\n        <div className=\"p-3\">\r\n          {props.children}\r\n          {!hideButtons && (\r\n            <div className=\"d-flex w-100 mt-3\">\r\n              <button className=\"flex-1 mr-2 btn btn-light\" onClick={closeWindow}>\r\n                {cancelButtonTitle ? cancelButtonTitle : \"CANCELAR\"}\r\n              </button>\r\n              {extraButtonTitle && (\r\n                <button\r\n                  className={`flex-1 mr-2 btn btn-${extraButtonColor ? extraButtonColor : \"light\"}`}\r\n                  onClick={extraButtonAction}\r\n                >\r\n                  {extraButtonTitle}\r\n                </button>\r\n              )}\r\n              <button className=\"flex-1 btn btn-success\" onClick={confirmButtonAction}>\r\n                {confirmButtonTitle ? confirmButtonTitle : \"CONFIRMAR\"}\r\n              </button>\r\n            </div>\r\n          )}\r\n          <p className=\"text-center text-secondary mt-3\">\r\n            (*) Los campos indicados deben ser completados\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalBody;\r\n","import React, { useState } from \"react\";\r\nimport ModalBody from \"./modal-body\";\r\nimport { StyledSelect } from \"./styled-inputs\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Picker = ({ episodes, close }) => {\r\n  const [picked, setPicked] = useState(episodes[0]);\r\n  const history = useHistory();\r\n\r\n  const handleConfirm = () => {\r\n    history.push(\"/episode/\" + picked);\r\n    close()\r\n  };\r\n\r\n  return (\r\n    <ModalBody\r\n      settings={{\r\n        title: \"Episodios\",\r\n        closeAction: close,\r\n        confirmButtonAction: handleConfirm,\r\n      }}\r\n    >\r\n      <div className=\"my-4\">\r\n        <StyledSelect label={\"Seleccionar Episodio\"} onChange={(e) => setPicked(e.target.value)}>\r\n          {episodes.map((number) => (\r\n            <option key={number} value={number}>\r\n              Episodio {number}\r\n            </option>\r\n          ))}\r\n        </StyledSelect>\r\n      </div>\r\n    </ModalBody>\r\n  );\r\n};\r\n\r\nexport default Picker;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { StyledInput, StyledSelect } from \"../utilities/styled-inputs\";\r\nimport Banner from \"./banner\";\r\nimport CharacterCard from \"./character.card\";\r\nimport Loading from \"./loading\";\r\nimport PagesButtons from \"./pages-buttons\";\r\nimport Picker from \"../utilities/picker\";\r\n\r\nconst Home = () => {\r\n  const [info, setInfo] = useState({});\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [charcacters, setCharacters] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [pickedEpisodes, setPickedEpisodes] = useState(false);\r\n\r\n  const api = \"https://rickandmortyapi.com/api/character/\";\r\n\r\n  useEffect(() => {\r\n    handleQuery();\r\n  }, []);\r\n\r\n  const handleQuery = async (params) => {\r\n    setLoading(true);\r\n    const query = await fetch(params ? params : api);\r\n    const { results, info } = await query.json();\r\n    if (query.status === 200) {\r\n      setCharacters(results);\r\n      setInfo(info);\r\n    } else {\r\n      console.log(info);\r\n      setCharacters([]);\r\n      setInfo({ next: null, prev: null });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleSearchByName = () => {\r\n    handleQuery(api + \"?name=\" + keyword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex screen\">\r\n      <Banner variant=\"primary\" />\r\n      <div className=\"flex-1 d-flex flex-column h-100\">\r\n        <div className=\"bg-secondary p-3 d-flex w-100 rounded\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <h5 className=\"strong-text m-0 mr-3\">Buscar Personaje</h5>\r\n            <StyledInput\r\n              style={{ marginRight: \"20px\" }}\r\n              value={keyword}\r\n              onChange={(e) => setKeyword(e.target.value)}\r\n            />\r\n            <button className=\"btn btn-primary mr-5\" onClick={handleSearchByName}>\r\n              <i className=\"fas fa-search display-6\" />\r\n            </button>\r\n            <PagesButtons action={handleQuery} info={info} />\r\n          </div>\r\n        </div>\r\n        <p className=\"font-italic p-2\">Mostrando {info.count} resultados</p>\r\n        {loading ? (\r\n          <Loading />\r\n        ) : charcacters.length ? (\r\n          <div className=\"d-flex flex-wrap scroll-area flex-1 align-items-start\">\r\n            {charcacters.map((element, idx) => (\r\n              <CharacterCard key={idx} data={element} setPickedEpisodes={setPickedEpisodes} />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"center-all w-100 h-100\">\r\n            <i className=\"fas fa-search display-3 mb-5\" />\r\n            <p className=\"strong-text display-5\">Sin resultados</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {pickedEpisodes && (\r\n        <Picker episodes={pickedEpisodes} close={() => setPickedEpisodes(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst InfoBanner = ({ data }) => {\r\n  return (\r\n    <div\r\n      style={{ width: \"250px\" }}\r\n      className=\"bg-success h-100 p-3 d-flex flex-column justify-content-center\"\r\n    >\r\n      <h4 style={{ lineHeight: \"50px\" }} className=\"strong-text display-3 mb-3\">\r\n        Rick and Morty\r\n      </h4>\r\n      <h1 className=\"strong-text display-6 mb-2\">{data.name}</h1>\r\n      <div className=\"mb-3\">\r\n        <p className=\"strong-text\">Tipo</p>\r\n        <h5 className=\"w-100\">{data.type}</h5>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <p className=\"strong-text\">Dimension</p>\r\n        <h5 className=\"w-100\">{data.dimension}</h5>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <p className=\"strong-text\">Residentes</p>\r\n        <h5 className=\"w-100\">{data.residents.length}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBanner;\r\n","import React, { useState, useEffect, createRef } from \"react\";\r\nconst defaultPag = {\r\n  page: 1,\r\n  pages: 1,\r\n  display: 25,\r\n  range: [],\r\n};\r\nconst Pagination = ({ length, setRange }) => {\r\n  const [pagination, setPagination] = useState(defaultPag);\r\n  let { page, pages, display, range, min, max } = pagination;\r\n\r\n\r\n  const pageInput = createRef();\r\n\r\n  useEffect(() => {\r\n    paginate();\r\n  }, [length, display, page]);\r\n\r\n  const paginate = () => {\r\n    pages = Math.ceil(length / display);\r\n    if (page > pages) {\r\n      page = 1;\r\n    }\r\n    let _range = [];\r\n    for (let x = 1; x <= pages; x++) {\r\n      _range.push(x);\r\n    }\r\n    max = page * display;\r\n    min = max - display;\r\n    setPagination({ ...pagination, page, pages, range: _range, min, max });\r\n    setRange({min, max});\r\n  };\r\n\r\n  const handlePages = (e) => {\r\n    setPagination({ ...pagination, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const turnPages = (e) => {\r\n    if (e.keyCode === 39) {\r\n      nextPage();\r\n    }\r\n\r\n    if (e.keyCode === 37) {\r\n      previousPage();\r\n    }\r\n  };\r\n\r\n  const nextPage = () => {\r\n    if (page < pages) {\r\n      page++;\r\n    }\r\n    setPagination({ ...pagination, page });\r\n    pageInput.current.selectedIndex = page - 1;\r\n  };\r\n  const previousPage = () => {\r\n    if (page > 1) {\r\n      page--;\r\n    }\r\n    setPagination({ ...pagination, page });\r\n    pageInput.current.selectedIndex = page - 1;\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }} tabIndex={0} className=\"pagination bg-dark n p-3\" onKeyDown={turnPages}>\r\n      <p className=\"text-white flex-1 text-truncate\">\r\n        desde {min + 1} hasta {max > length ? length : max}\r\n      </p>\r\n\r\n      <div style={{width:\"300px\"}} className=\"d-flex align-items-center\">\r\n        <i className=\"btn fas fa-chevron-circle-left display-6 click-animate text-secondary\" onClick={previousPage} />\r\n        <label className=\"m-0 mr-2\">pagina</label>\r\n        <select style={{ width: \"unset\" }} name=\"page\" className=\"mr-2\" onChange={handlePages} ref={pageInput}>\r\n          {range.map((page, idx) => (\r\n            <option key={idx} value={page}>\r\n              {page}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label className=\"m-0 mr-2\">mostrar</label>\r\n        <select style={{ width: \"unset\" }} name=\"display\" onChange={handlePages}>\r\n          <option value={25}>25</option>\r\n          <option value={50}>50</option>\r\n          <option value={75}>75</option>\r\n          <option value={100}>100</option>\r\n        </select>\r\n        <i className=\"btn fas fa-chevron-circle-right display-6 click-animate text-secondary\" onClick={nextPage} />\r\n      </div>\r\n\r\n      <p className=\"text-white flex-1 text-right text-truncate\">total: {length} elementos</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CharacterCard from \"../home/character.card\";\r\nimport Loading from \"../home/loading\";\r\nimport Pagination from \"./pagination\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharactersGallery = ({ data, title, setPickedEpisodes }) => {\r\n  let [results, setResults] = useState([]);\r\n  let [range, setRange] = useState({ min: 1, max: 25 });\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getResidentsInfo(range);\r\n  }, [data]);\r\n\r\n  const getResidentsInfo = async (range) => {\r\n    setLoading(true);\r\n    const charactersID = [];\r\n    for (let x = range.min; x < range.max; x++) {\r\n      if (data[x] !== undefined) {\r\n        let currentID = data[x].split(\"character/\")[1];\r\n        charactersID.push(currentID);\r\n      }\r\n    }\r\n    const query = await fetch(\"https://rickandmortyapi.com/api/character/\" + charactersID);\r\n    const result = await query.json();\r\n    setResults(result);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getResidentsInfo(range);\r\n  }, [range]);\r\n\r\n  return (\r\n    <div className=\"ml-3 flex-1 d-flex flex-column h-100\">\r\n      <div className=\"d-flex bg-light p-3\">\r\n        <h4 className=\"strong-text flex-1 m-0\">{title}</h4>\r\n        <Link to=\"/\" className=\"m-0 p-2 text-warning\">\r\n          Volver <i className=\"fas fa-home text-warning\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"d-flex flex-wrap align-items-start scroll-area flex-1\">\r\n        {loading ? (\r\n          <Loading />\r\n        ) : (\r\n          results.map((route, idx) => {\r\n            return <CharacterCard key={idx} data={route} setPickedEpisodes={setPickedEpisodes} />;\r\n          })\r\n        )}\r\n      </div>\r\n      <Pagination length={data.length} setRange={setRange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharactersGallery;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Loading from \"../home/loading\";\r\nimport InfoBanner from \"./info-banner\";\r\nimport CharactersGallery from \"../utilities/characters-gallery\";\r\nimport Picker from \"../utilities/picker\";\r\n\r\nconst Location = ({ match }) => {\r\n  const [data, setData] = useState(null);\r\n  const [pickedEpisodes, setPickedEpisodes] = useState(false);\r\n\r\n  const handleQuery = async () => {\r\n    const query = await fetch(\"https://rickandmortyapi.com/api/location/\" + match.params.id);\r\n    const result = await query.json();\r\n    if (query.status === 200) {\r\n      setData(result);\r\n    } else {\r\n      console.log(result);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleQuery();\r\n  }, []);\r\n\r\n  return data === null ? (\r\n    <div className=\"screen\">\r\n      <Loading />\r\n    </div>\r\n  ) : (\r\n    <div className=\"screen d-flex\">\r\n      <InfoBanner data={data} />\r\n      <CharactersGallery\r\n        data={data.residents}\r\n        title={\"Residentes de \" + data.name}\r\n        setPickedEpisodes={setPickedEpisodes}\r\n      />\r\n      {pickedEpisodes && (\r\n        <Picker episodes={pickedEpisodes} close={() => setPickedEpisodes(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Banner from \"../home/banner\";\r\nimport Loading from \"../home/loading\";\r\nimport CharactersGallery from \"../utilities/characters-gallery\";\r\nimport Picker from \"../utilities/picker\";\r\n\r\nconst EpisodePage = ({ match }) => {\r\n  const [data, setData] = useState(null);\r\n  const [pickedEpisodes, setPickedEpisodes] = useState(false);\r\n\r\n  const handleQuery = async () => {\r\n    const query = await fetch(\"https://rickandmortyapi.com/api/episode/\" + match.params.id);\r\n    const result = await query.json();\r\n    if (query.status === 200) {\r\n      setData(result);\r\n      console.log(result);\r\n    } else {\r\n      console.log(result);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleQuery();\r\n  }, [match.params.id]);\r\n\r\n  return data === null ? (\r\n    <div className=\"screen\">\r\n      <Loading />\r\n    </div>\r\n  ) : (\r\n    <div className=\"screen d-flex\">\r\n      <Banner variant=\"danger\" />\r\n      <CharactersGallery\r\n        data={data.characters}\r\n        title={`Episodio: ${data.name} (${data.air_date}) - Personajes: ${data.characters.length}`}\r\n        setPickedEpisodes={setPickedEpisodes}\r\n      />\r\n      {pickedEpisodes && (\r\n        <Picker episodes={pickedEpisodes} close={() => setPickedEpisodes(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EpisodePage;\r\n","import \"./styles/App.css\";\r\nimport \"./styles/bootstrap.min.css\";\r\nimport \"./styles/css/all.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/home/home.page\";\r\nimport Location from \"./components/location/location.page\";\r\nimport Episode from \"./components/episodes/episodes.page\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/location/:id\" component={Location} />\r\n          <Route exact path=\"/episode/:id\" component={Episode} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}